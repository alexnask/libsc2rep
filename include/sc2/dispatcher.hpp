#pragma once
#ifndef SC2_DISPATCHER__HPP
#define SC2_DISPATCHER__HPP

#include <sc2/replay.hpp>
#include <sc2/serialized/versioned.hpp>

namespace sc2 {
	// These schemas are autogenerated by tools/protocol_translator.py
	typedef sc2::versioned::Schema<sc2::versioned::Struct<sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int>, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Bool, sc2::versioned::Struct<sc2::versioned::Blob>, sc2::versioned::Int>> HeaderSchema;
	
	typedef sc2::versioned::Schema<sc2::versioned::Struct<sc2::versioned::Optional<sc2::versioned::Array<sc2::versioned::Struct<sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Int, sc2::versioned::FourCC, sc2::versioned::Int, sc2::versioned::Int>, sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int>, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Optional<sc2::versioned::Int>, sc2::versioned::Blob>>>, sc2::versioned::Blob, sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Blob>, sc2::versioned::Bool, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Blob, sc2::versioned::Blob, sc2::versioned::Blob, sc2::versioned::Optional<sc2::versioned::Array<sc2::versioned::Blob>>, sc2::versioned::Bool, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Optional<sc2::versioned::Array<sc2::versioned::Blob>>, sc2::versioned::Int, sc2::versioned::Optional<sc2::versioned::Bool>>> Details35032;
	
	// The dispatcher associates SC2 builds to schemas for different replay files, executes them and extracts result as necessary
	class Dispatcher {
		public:
			static void details(std::string data, Replay& parent);
		private:
			static void detail_handler(Node root, Replay& parent);
	};
}

#endif//SC2_DISPATCHER__HPP
