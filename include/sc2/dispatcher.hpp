#pragma once
#ifndef SC2_DISPATCHER__HPP
#define SC2_DISPATCHER__HPP

#include <sc2/replay.hpp>
#include <sc2/serialized/versioned.hpp>
#include <sc2/serialized/bitpack.hpp>

namespace sc2 {
	// These schemas are autogenerated by tools/protocol_translator.py
	typedef sc2::versioned::Schema<sc2::versioned::Struct<sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int>, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Bool, sc2::versioned::Struct<sc2::versioned::Blob>, sc2::versioned::Int>> HeaderSchema;
	
	typedef sc2::versioned::Schema<sc2::versioned::Struct<sc2::versioned::Optional<sc2::versioned::Array<sc2::versioned::Struct<sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Int, sc2::versioned::FourCC, sc2::versioned::Int, sc2::versioned::Int>, sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int>, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Optional<sc2::versioned::Int>, sc2::versioned::Blob>>>, sc2::versioned::Blob, sc2::versioned::Blob, sc2::versioned::Struct<sc2::versioned::Blob>, sc2::versioned::Bool, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Blob, sc2::versioned::Blob, sc2::versioned::Blob, sc2::versioned::Optional<sc2::versioned::Array<sc2::versioned::Blob>>, sc2::versioned::Bool, sc2::versioned::Int, sc2::versioned::Int, sc2::versioned::Optional<sc2::versioned::Array<sc2::versioned::Blob>>, sc2::versioned::Int, sc2::versioned::Optional<sc2::versioned::Bool>>> Details35032;

	typedef sc2::bitpack::Schema<sc2::bitpack::Struct<sc2::bitpack::Struct<sc2::bitpack::Array<0, 5, sc2::bitpack::Struct<sc2::bitpack::Blob<0, 8>, sc2::bitpack::Optional<sc2::bitpack::Blob<0, 8>>, sc2::bitpack::Optional<sc2::bitpack::Blob<40, 0>>, sc2::bitpack::Optional<sc2::bitpack::Int<0, 8>>, sc2::bitpack::Optional<sc2::bitpack::Int<0, 32>>, sc2::bitpack::Int<0, 32>, sc2::bitpack::Struct<sc2::bitpack::Optional<sc2::bitpack::Int<0, 8>>>, sc2::bitpack::Struct<sc2::bitpack::Optional<sc2::bitpack::Int<0, 8>>>, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Int<0, 32>, sc2::bitpack::Int<0, 2>, sc2::bitpack::Blob<0, 9>, sc2::bitpack::Blob<0, 9>, sc2::bitpack::Blob<0, 9>, sc2::bitpack::Blob<0, 7>>>, sc2::bitpack::Struct<sc2::bitpack::Int<0, 32>, sc2::bitpack::Blob<0, 10>, sc2::bitpack::Struct<sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Int<0, 2>, sc2::bitpack::Int<0, 2>, sc2::bitpack::Int<0, 2>, sc2::bitpack::Int<0, 64>>, sc2::bitpack::Int<0, 3>, sc2::bitpack::Int<0, 3>, sc2::bitpack::Int<0, 5>, sc2::bitpack::Int<0, 5>, sc2::bitpack::Int<0, 5>, sc2::bitpack::Int<1, 4>, sc2::bitpack::Int<0, 6>, sc2::bitpack::Int<1, 8>, sc2::bitpack::Int<0, 8>, sc2::bitpack::Int<0, 8>, sc2::bitpack::Int<0, 8>, sc2::bitpack::Int<0, 32>, sc2::bitpack::Blob<0, 11>, sc2::bitpack::Blob<0, 8>, sc2::bitpack::Int<0, 32>, sc2::bitpack::Array<0, 5, sc2::bitpack::Struct<sc2::bitpack::BitArray<0, 6>, sc2::bitpack::BitArray<0, 8>, sc2::bitpack::BitArray<0, 6>, sc2::bitpack::BitArray<0, 8>, sc2::bitpack::BitArray<0, 2>, sc2::bitpack::BitArray<0, 7>>>, sc2::bitpack::Int<0, 6>, sc2::bitpack::Int<0, 7>, sc2::bitpack::Array<0, 6, sc2::bitpack::Blob<40, 0>>, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool, sc2::bitpack::Bool>, sc2::bitpack::Struct<sc2::bitpack::Int<0, 3>, sc2::bitpack::Int<0, 5>, sc2::bitpack::Int<0, 5>, sc2::bitpack::Array<0, 5, sc2::bitpack::Struct<sc2::bitpack::Int<0, 8>, sc2::bitpack::Optional<sc2::bitpack::Int<0, 4>>, sc2::bitpack::Int<0, 4>, sc2::bitpack::Struct<sc2::bitpack::Optional<sc2::bitpack::Int<0, 5>>>, sc2::bitpack::Struct<sc2::bitpack::Optional<sc2::bitpack::Int<0, 8>>>, sc2::bitpack::Int<0, 6>, sc2::bitpack::Int<0, 7>, sc2::bitpack::Int<0, 7>, sc2::bitpack::Int<0, 2>, sc2::bitpack::Int<0, 32>, sc2::bitpack::Blob<0, 9>, sc2::bitpack::Blob<0, 9>, sc2::bitpack::Blob<0, 9>, sc2::bitpack::Array<0, 4, sc2::bitpack::Blob<0, 9>>, sc2::bitpack::Optional<sc2::bitpack::Int<0, 8>>, sc2::bitpack::Array<0, 17, sc2::bitpack::Int<0, 32>>, sc2::bitpack::Blob<0, 7>, sc2::bitpack::Array<0, 9, sc2::bitpack::Int<0, 32>>, sc2::bitpack::Optional<sc2::bitpack::Int<0, 4>>, sc2::bitpack::Blob<0, 9>>>, sc2::bitpack::Int<0, 32>, sc2::bitpack::Optional<sc2::bitpack::Int<0, 4>>, sc2::bitpack::Bool, sc2::bitpack::Int<0, 32>, sc2::bitpack::Int<0, 6>, sc2::bitpack::Int<0, 7>>>>> InitDataSchema35032;

	// The dispatcher associates SC2 builds to schemas for different replay files, executes them and extracts result as necessary
	class Dispatcher {
		public:
			static void details(std::string data, Replay& parent);
	};

	template <int Build, typename RType>
	static void detail_handler(const RType& root, Replay& parent);
}

#endif//SC2_DISPATCHER__HPP
